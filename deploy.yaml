apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-operator-controller
  namespace: spark-operator
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: spark-operator
    app.kubernetes.io/name: spark-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: spark-operator
      app.kubernetes.io/name: spark-operator
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: spark-operator
        app.kubernetes.io/name: spark-operator
    spec:
      automountServiceAccountToken: true
      containers:
      - name: spark-operator-controller
        image: ghcr.io/kubeflow/spark-operator/controller:gangav0.0.1
        imagePullPolicy: IfNotPresent
        args:
        - controller
        - start
        - --zap-log-level=info
        - --namespaces=default
        - --controller-threads=10
        - --enable-ui-service=true
        - --enable-metrics=true
        - --metrics-bind-address=:8080
        - --metrics-endpoint=/metrics
        - --metrics-prefix=
        - --metrics-labels=app_type
        - --metrics-job-start-latency-buckets=30,60,90,120,150,180,210,240,270,300
        - --leader-election=true
        - --leader-election-lock-name=spark-operator-controller-lock
        - --leader-election-lock-namespace=spark-operator
        - --workqueue-ratelimiter-bucket-qps=50
        - --workqueue-ratelimiter-bucket-size=500
        - --workqueue-ratelimiter-max-delay=6h
        - --driver-pod-creation-grace-period=10s
        - --max-tracked-executor-per-app=1000
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      
      # Native Submit gRPC Service as sidecar
      - name: native-submit-grpc
        image: ghcr.io/kubeflow/spark-operator/native-submit:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: GRPC_PORT
          value: "50051"
        - name: HEALTH_PORT
          value: "8080"
        ports:
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 185
          runAsGroup: 185
          seccompProfile:
            type: RuntimeDefault
      
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 185
      serviceAccount: spark-operator-controller
      serviceAccountName: spark-operator-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          sizeLimit: 1Gi
        name: tmp
---
apiVersion: v1
kind: Service
metadata:
  name: spark-operator-controller
  namespace: spark-operator
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: spark-operator
    app.kubernetes.io/name: spark-operator
spec:
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: spark-operator
    app.kubernetes.io/name: spark-operator
  ports:
  - name: metrics
    protocol: TCP
    port: 8080
    targetPort: 8080
  - name: grpc
    protocol: TCP
    port: 50051
    targetPort: 50051
  - name: health
    protocol: TCP
    port: 8080
    targetPort: 8080 