package driver

const (
	SparkDriverCores          = "spark.driver.cores"
	SparkDriverMemory         = "spark.driver.memory"
	ForwardSlash              = "/"
	KerberosPath              = "spark.kubernetes.kerberos.krb5.path"
	KerberosConfigMapName     = "spark.kubernetes.kerberos.krb5.configMapName"
	KerberosFileVolume        = "krb5-file"
	KerberosFileDirectoryPath = "/etc"
	KerberosFileName          = "krb5.conf"

	SparkDriverEnvPrefix             = "spark.kubernetes.driverEnv"
	All                              = "ALL"
	SparkUserId                      = "185"
	SparkBlockManagerPort            = "spark.blockManager.port"
	SparkDriverBlockManagerPort      = "spark.driver.blockManager.port"
	DotSeparator                     = "."
	SparkDriverDNSPolicy             = "ClusterFirst"
	SparkNodeSelectorPrefix          = "spark.kubernetes.node.selector."
	SparkDriverPodNodeSelectorPrefix = "spark.kubernetes.driver.node.selector."
	DriverPodRestartPolicyNever      = "Never"
	// LabelAnnotationPrefix is the prefix of every labels and annotations added by the controller.
	LabelAnnotationPrefix = "sparkoperator.k8s.io/"
	// SparkAppNameLabel is the name of the label for the SparkApplication object name.
	SparkAppNameLabel                    = LabelAnnotationPrefix + "app-name"
	DriverPodSecurityContextID           = 185
	DefaultTerminationGracePeriodSeconds = 30
	TolerationEffect                     = "NoExecute"
	NodeNotReady                         = "node.kubernetes.io/not-ready"
	NodeNotReachable                     = "node.kubernetes.io/unreachable"
	Operator                             = "Exists"
	DefaultTolerationSeconds             = 300
	SparkConfVolumeDriver                = "spark-conf-volume-driver"
	SparkConfVolumeDriverMountPath       = "/opt/spark/conf"
	SparkEnvScriptFileName               = "spark-env.sh"
	SparkPropertiesFileName              = "spark.properties"
	LocalStoragePrefix                   = "spark-local-dir-"
	SparkLocalDirPath                    = "/var/data/spark-"
	SparkLocalDirectoryName              = "spark-local-dir-"
	SparkLocalDir                        = "SPARK_LOCAL_DIRS"
	SparkDriverArg                       = "driver"
	SparkDriverArgPropertiesFile         = "--properties-file"
	SparkDriverArgClass                  = "--class"
	SparkDriverArgPropertyFilePath       = "/opt/spark/conf/spark.properties"
	SparkDefaultsConfigFilePath          = "/opt/spark/conf/"
	SparkUser                            = "SPARK_USER"
	SparkApplicationID                   = "SPARK_APPLICATION_ID"
	SparkDriverBindAddress               = "SPARK_DRIVER_BIND_ADDRESS"
	ApiVersionV1                         = "v1"
	SparkDriverPodIP                     = "status.podIP"
	KerberosTokenSecretItemKey           = "spark.kubernetes.kerberos.tokenSecret.itemKey"
	KerberosHadoopSecretFilePathKey      = "HADOOP_TOKEN_FILE_LOCATION"
	KerberosHadoopSecretFilePath         = "/mnt/secrets/hadoop-credentials/"
	ImagePullPolicyIfNotPresent          = "IfNotPresent"
	DriverPortName                       = "driver-rpc-port"
	BlockManagerPortName                 = "blockmanager"
	Protocol                             = "TCP"
	UiPortName                           = "spark-ui"
	UiPort                               = 4040
	DriverPodTerminationLogPath          = "/dev/termination-log"
	DriverPodTerminationMessagePolicy    = "File"
	OAuthTokenConfFile                   = "spark.kubernetes.authenticate.driver.oauthTokenFile"
	ClientKeyFile                        = "spark.kubernetes.authenticate.driver.clientKeyFile"
	ClientCertFile                       = "spark.kubernetes.authenticate.driver.clientCertFile"
	CaCertFile                           = "spark.kubernetes.authenticate.driver.caCertFile"
	KubernetesCredentials                = "kubernetes-credentials"
	KubernetesCredentialsVolumeMountPath = "/mnt/secrets/spark-kubernetes-credentials"
)
